# Generated by Django 4.2.19 on 2025-02-27 17:37

from django.db import migrations
from composer.enums import CSState


def revert_has_statement_been_exported_statements_without_population(apps, schema_editor):
    """
    Reverts statements that were exported but have no population:
    - Marks `has_statement_been_exported = False`
    - Moves those in `EXPORTED` state back to `NPO_APPROVED`
    - Creates system Notes for statements transitioning from `EXPORTED` to `NPO_APPROVED`
    """
    ConnectivityStatement = apps.get_model("composer", "ConnectivityStatement")
    CSState = apps.get_model("composer", "CSState")
    Note = apps.get_model("composer", "Note")
    NoteType = apps.get_model("composer", "NoteType")
    User = apps.get_model("auth", "User")


    # Find statements that have been exported and have no population
    statements_to_update = ConnectivityStatement.objects.filter(
        has_statement_been_exported=True,
        population__isnull=True
    )

    # Reset `has_statement_been_exported`
    statements_to_update.update(has_statement_been_exported=False)

    # Find statements in `EXPORTED` state
    statements_moving_to_npo = statements_to_update.filter(state=CSState.EXPORTED)

    # Move them back to `NPO_APPROVED`
    statements_moving_to_npo.update(state=CSState.NPO_APPROVED)


    # Get the system user
    try:
        system_user = User.objects.get(username="system")
    except User.DoesNotExist:
        system_user = None

    # Efficiently create system Notes for each updated statement
    notes_to_create = [
        Note(
            user=system_user,
            type=NoteType.TRANSITION,
            connectivity_statement=statement,
            note="Automatically transitioned from EXPORTED to NPO_APPROVED due to missing population set.",
        )
        for statement in statements_moving_to_npo
    ]

    # Bulk insert all Notes at once
    if notes_to_create and system_user:
        Note.objects.bulk_create(notes_to_create)


class Migration(migrations.Migration):

    dependencies = [
        ("composer", "0078_connectivitystatement_population_index_and_more"),
    ]

    operations = [
        migrations.RunPython(revert_has_statement_been_exported_statements_without_population),
    ]