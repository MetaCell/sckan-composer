# Generated by Django 4.1.4 on 2024-03-19 16:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("composer", "0048_remove_connectivitystatement_origins_and_more"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="AnatomicalEntityNew",
            new_name="AnatomicalEntity",
        ),
        migrations.RenameField(
            model_name="destination",
            old_name="from_entities_new",
            new_name="from_entities",
        ),
        migrations.RenameField(
            model_name="via",
            old_name="from_entities_new",
            new_name="from_entities",
        ),
        # Assuming the intention was to rename 'origins_new' to 'origins',
        # 'anatomical_entities_new' to 'anatomical_entities', and similar for other fields
        # Note: For ManyToManyFields, if Django's migration system doesn't support direct renaming,
        # you may need a more complex approach to adjust the intermediary table instead of simple field renaming.
        # For now, let's assume renaming is what you intended:
        migrations.RenameField(
            model_name="connectivitystatement",
            old_name="origins_new",
            new_name="origins",
        ),
        migrations.RenameField(
            model_name="destination",
            old_name="anatomical_entities_new",
            new_name="anatomical_entities",
        ),
        migrations.RenameField(
            model_name="via",
            old_name="anatomical_entities_new",
            new_name="anatomical_entities",
        ),
        migrations.RenameField(
            model_name="synonym",
            old_name="anatomical_entity_new",
            new_name="anatomical_entity",
        ),
        migrations.AlterUniqueTogether(
            name="synonym",
            unique_together={("anatomical_entity", "name")},
        ),
    ]

