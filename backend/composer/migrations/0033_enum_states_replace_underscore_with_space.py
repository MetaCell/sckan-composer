# Generated by Django 4.1.4 on 2023-04-08 12:56

from django.db import migrations
from django.db.models import CheckConstraint, Q, F, Value
from django.db.models.functions import Replace


def replace_underscore_space(apps, schema_editor):
    ConnectivityStatement = apps.get_model('composer', 'ConnectivityStatement')
    Sentence =  apps.get_model('composer', 'Sentence')

    ConnectivityStatement.objects.all().update(state=Replace(F('state'),Value("_"), Value(" ")))
    Sentence.objects.all().update(state=Replace(F('state'),Value("_"), Value(" ")))


class Migration(migrations.Migration):
    dependencies = [
        ("composer", "0032_exportbatch_connectivity_statements_created_and_more"),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name="connectivitystatement",
            name="state_valid",
        ),
        migrations.RemoveConstraint(
            model_name="sentence",
            name="sentence_state_valid",
        ),
        migrations.RemoveConstraint(
            model_name="sentence",
            name="sentence_pmid_pmcd_valid",
        ),
        migrations.RunPython(replace_underscore_space),
        migrations.AddConstraint(
            model_name="connectivitystatement",
            constraint=CheckConstraint(
                check=Q(
                    (
                        "state__in",
                        [
                            "draft",
                            "compose now",
                            "curated",
                            "excluded",
                            "rejected",
                            "to be reviewed",
                            "connection missing",
                            "npo approved",
                            "exported",
                        ],
                    )
                ),
                name="state_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="sentence",
            constraint=CheckConstraint(
                check=Q(
                    (
                        "state__in",
                        [
                            "open",
                            "to be reviewed",
                            "compose later",
                            "compose now",
                            "excluded",
                            "duplicate",
                        ],
                    )
                ),
                name="sentence_state_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="sentence",
            constraint=CheckConstraint(
                check=Q(
                    Q(("state", "compose now"), _negated=True),
                    Q(
                        ("state", "compose now"),
                        Q(
                            ("pmid__isnull", False),
                            ("pmcid__isnull", False),
                            ("doi__isnull", False),
                            _connector="OR",
                        ),
                    ),
                    _connector="OR",
                ),
                name="sentence_pmid_pmcd_valid",
            ),
        ),
    ]
