# Generated by Django 4.1.4 on 2024-07-08 13:18

from django.db import migrations, models
import django.db.models.deletion


def populate_intersection_anatomical_entity_meta_id_from_layer_region(apps, schema_editor):
    """
    populating the new fields from AnatomicalEntityIntersection 
    layer_id -> layer_meta_id
    region_id -> region_meta_id
    """
    AnatomicalEntityIntersection = apps.get_model("composer", "AnatomicalEntityIntersection")
    for intersection in AnatomicalEntityIntersection.objects.all(): 
        intersection.layer_meta_id = intersection.layer_id
        intersection.region_meta_id = intersection.region_id
        intersection.save()
        

def populate_layer_region_ae_meta_ids_from_anatomicalentitymeta_ptr_id(apps, schema_editor):
    """
    populating the new fields from Layer and Region
    anatomicalentitymeta_ptr_id -> layer_ae_meta_id 
    anatomicalentitymeta_ptr_id -> region_ae_meta_id 
    """
    Layer = apps.get_model("composer", "Layer")
    Region = apps.get_model("composer", "Region")

    for layer in Layer.objects.all():
        layer.layer_ae_meta_id = layer.anatomicalentitymeta_ptr_id
        layer.save()

    for region in Region.objects.all():
        region.region_ae_meta_id = region.anatomicalentitymeta_ptr_id
        region.save()


class Migration(migrations.Migration):

    dependencies = [
        ("composer", "0051_alter_anatomicalentity_region_layer"),
    ]

    # Steps taken in migration:
    # 1. create new fields for layer and region - layer_ae_meta, region_ae_meta
    # 2. create new fields for AnatomicalEntityIntersection - layer_meta, region_meta
    # 3. populate the new fields in AnatomicalEntityIntersection from the old fields - layer, region
    # 4. populate the new fields in Layer and Region from the old fields - anatomicalentitymeta_ptr_id
    operations = [
        migrations.AlterModelOptions(
            name="anatomicalentity",
            options={
                "verbose_name": "Anatomical Entity",
                "verbose_name_plural": "Anatomical Entities",
            },
        ),

        migrations.AddField(
            model_name="layer",
            name="layer_ae_meta",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="layer_meta",
                to="composer.anatomicalentitymeta",
            ),
        ),
        migrations.AddField(
            model_name="region",
            name="region_ae_meta",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="region_meta",
                to="composer.anatomicalentitymeta",
            ),
        ),

        # ------------------------
        migrations.AddField(
            model_name="anatomicalentityintersection",
            name="layer_meta",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="layer_intersection",
                to="composer.anatomicalentitymeta",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="anatomicalentityintersection",
            name="region_meta",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="region_intersection",
                to="composer.anatomicalentitymeta",
            ),
            preserve_default=False,
        ),

        # ------------------------

        migrations.RunPython(
            code=populate_intersection_anatomical_entity_meta_id_from_layer_region,
            reverse_code=migrations.RunPython.noop,
        ),

        # ------------------------

        migrations.RunPython(
            code=populate_layer_region_ae_meta_ids_from_anatomicalentitymeta_ptr_id,
            reverse_code=migrations.RunPython.noop,
        ),

    ]


