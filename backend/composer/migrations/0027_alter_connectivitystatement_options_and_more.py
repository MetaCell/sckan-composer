# Generated by Django 4.1.4 on 2023-04-06 15:10

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("composer", "0026_auto_20230406_1506"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="connectivitystatement",
            options={
                "ordering": ["knowledge_statement"],
                "verbose_name_plural": "Connectivity Statements",
            },
        ),
        migrations.AlterField(
            model_name="connectivitystatement",
            name="destination_type",
            field=models.CharField(
                choices=[
                    ("AXON-T", "Axon terminal"),
                    ("AFFERENT-T", "Afferent terminal"),
                    ("UNKNOWN", "Not specified"),
                ],
                default="UNKNOWN",
                max_length=10,
            ),
        ),
        migrations.AddConstraint(
            model_name="connectivitystatement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "state__in",
                        [
                            "draft",
                            "compose_now",
                            "curated",
                            "excluded",
                            "rejected",
                            "to_be_reviewed",
                            "connection_missing",
                            "npo_approved",
                            "exported",
                        ],
                    )
                ),
                name="state_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="connectivitystatement",
            constraint=models.CheckConstraint(
                check=models.Q(("laterality__in", ["IPSI", "ONTRAT", "BI", "UNKNOWN"])),
                name="laterality_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="connectivitystatement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    (
                        "circuit_type__in",
                        [
                            "SENSORY",
                            "MOTOR",
                            "INTRINSIC",
                            "PROJECTION",
                            "ANAXONIC",
                            "UNKNOWN",
                        ],
                    )
                ),
                name="circuit_type_valid",
            ),
        ),
        migrations.AddConstraint(
            model_name="connectivitystatement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("destination_type__in", ["AXON-T", "AFFERENT-T", "UNKNOWN"])
                ),
                name="destination_type_valid",
            ),
        ),
    ]
