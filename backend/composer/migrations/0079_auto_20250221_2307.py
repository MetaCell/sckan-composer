# Generated by Django 4.2.19 on 2025-02-21 22:07

from django.db import migrations
from django.db.models import F, Max, Window
from django.db.models.functions import RowNumber

from composer.enums import CSState


def populate_population_indices(apps, schema_editor):
    ConnectivityStatement = apps.get_model("composer", "ConnectivityStatement")
    PopulationSet = apps.get_model("composer", "PopulationSet")
    BATCH_SIZE = 1000

    for population in PopulationSet.objects.all().iterator():
        qs = ConnectivityStatement.objects.filter(
            population=population, state=CSState.EXPORTED
        ).order_by("id")

        last_used_index = 0
        batch = []

        for statement in qs.iterator(chunk_size=BATCH_SIZE):
            last_used_index += 1
            statement.population_index = last_used_index
            batch.append(statement)

            if len(batch) >= BATCH_SIZE:
                ConnectivityStatement.objects.bulk_update(batch, ["population_index"])
                batch = []

        if batch:
            ConnectivityStatement.objects.bulk_update(batch, ["population_index"])

        # Update the population setâ€™s last_used_index
        population.last_used_index = last_used_index
        population.save(update_fields=["last_used_index"])


class Migration(migrations.Migration):

    dependencies = [
        ("composer", "0078_connectivitystatement_population_index_and_more"),
    ]

    operations = [migrations.RunPython(populate_population_indices)]
