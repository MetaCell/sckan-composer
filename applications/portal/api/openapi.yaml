components:
  schemas:
    Valid:
      properties:
        response: {type: string}
      type: object
  securitySchemes:
    bearerAuth: {bearerFormat: JWT, scheme: bearer, type: http, x-bearerInfoFunc: cloudharness.auth.decode_token}
info:
  contact: {email: cloudharness@metacell.us}
  description: portal
  license: {name: UNLICENSED}
  title: portal
  version: 0.1.0
openapi: 3.0.0
paths:
  /live:
    get:
      operationId: live
      responses:
        '200':
          content:
            application/json:
              schema: {type: string}
          description: Healthy
        '500': {description: Application is not healthy}
      security: []
      summary: Test if application is healthy
      tags: [test]
  /ping:
    get:
      operationId: ping
      responses:
        '200':
          content:
            application/json:
              schema: {type: string}
          description: What we want
        '500': {description: This shouldn't happen}
      security: []
      summary: Test the application is up
      tags: [test]
  /ready:
    get:
      operationId: ready
      responses:
        '200':
          content:
            application/json:
              schema: {type: string}
          description: Ready
        '500': {description: Application is not ready}
      security: []
      summary: Test if application is ready
      tags: [test]
security:
- bearerAuth: []
servers:
- {url: /api}
tags:
- {name: test}
